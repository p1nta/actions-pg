name: Update Changelog and Version

on:
  pull_request:
    types:
      - opened
    branches: ["canary", "main"]

jobs:
  update-changelog-and-version:
    runs-on: ubuntu-latest
    permissions:
      contents: write # 'write' access to repository contents
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.11.0"

      - name: Run Changelog Updated
        run: node .github/scripts/update_changelog.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_PR_NUMBER: ${{ github.event.pull_request.number }}
          BRANCH_NAME: ${{ github.event.pull_request.head.ref }}

      - name: Push changes
        uses: EndBug/add-and-commit@v9 # You can change this to use a specific version.
        with:
          # The arguments for the `git add` command (see the paragraph below for more info)
          add: "package.json package-lock.json CHANGELOG.md"

          # The name of the user that will be displayed as the author of the commit.
          # Default: depends on the default_author input
          author_name: ${{ github.actor }}

          # Determines the way the action fills missing author name and email. Three options are available:
          # - github_actor -> UserName <UserName@users.noreply.github.com>
          # - user_info -> Your Display Name <your-actual@email.com>
          # - github_actions -> github-actions <email associated with the github logo>
          # Default: github_actor
          default_author: github_actions

          # Arguments for the git fetch command. If set to false, the action won't fetch the repo.
          # For more info as to why fetching is usually recommended, please see the "Performance on large repos" FAQ.
          # Default: --tags --force
          fetch: false

          # The message for the commit.
          # Default: 'Commit from GitHub Actions (name of the workflow)'
          message: "chore: update changelog"

          # The way the action should handle pathspec errors from the add and remove commands. Three options are available:
          # - ignore -> errors will be logged but the step won't fail
          # - exitImmediately -> the action will stop right away, and the step will fail
          # - exitAtEnd -> the action will go on, every pathspec error will be logged at the end, the step will fail.
          # Default: ignore
          pathspec_error_handling: exitAtEnd
